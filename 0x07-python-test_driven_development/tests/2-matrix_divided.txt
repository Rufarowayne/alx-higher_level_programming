Defines test cases for the ``matrix_divided`` function in the ``2-matrix_divided`` module

# Import module for matrix_divided
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

# Test for a valid matrix and valid divisor
>>> matrix_divided([
... [1, 2, 3],
... [4, 5, 6],
... [7, 8, 9]
... ], 1)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]]

# Test for a valid matrix and valid divisor
>>> matrix_divided([
... [5, 5, 5],
... [10, 10, 10],
... [11.0, 11.0, 11.0]
... ], 2)
[[2.5, 2.5, 2.5], [5.0, 5.0, 5.0], [5.5, 5.5, 5.5]]

# Test for valid matrix and an invalid divisor
>>> matrix_divided([
... [5, 5, 5],
... [10, 10, 10],
... [11.0, 11.0, 11.0]
... ], "2")
Traceback (most recent call last):
...
TypeError: div must be a number

# Test for a valid matrix and the divisor set to 0
>>> matrix_divided([
... [5, 5, 5],
... [10, 10, 10],
... [11.0, 11.0, 11.0]
... ], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

# Test for matrix which is not a list of list of numbers
>>> matrix_divided([
... ["1", 2, 3],
... [4, 5, 6],
... [7, 8, 9]
... ], 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test for matrix which is not a list of list
>>> matrix_divided([1, 2, 3], 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test for matrix with inconsistent rows (more columns)
>>> matrix_divided([
... [1, 2, 3],
... [4, 5, 6],
... [7, 8, 9, 8]
... ], 1)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# Test for matrix with inconsistent rows (less columns)
>>> matrix_divided([
... [1, 2, 3],
... [4, 5],
... [7, 8, 9]
... ], 1)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# Test for no positional arguments
>>> matrix_divided()
[[]]

# Test for missing second positional argument
>>> matrix_divided([
... [1, 2, 3],
... [4, 5, 6],
... [7, 8, 9]
... ])
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]]

# Test for missing second positional argument
>>> matrix_divided([[5]])
[[5.0]]

# Test for missing first positional argument
>>> matrix_divided(div=1)
[[]]
